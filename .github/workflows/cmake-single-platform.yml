# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Windows Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Archive artifacts
      run: Compress-Archive -Path ${{github.workspace}}/build/* -DestinationPath ${{github.workspace}}/build/build.zip

    - name: Find Existing Release
      id: find_existing_release
      uses: actions/github-script@v6
      with:
        script: |
          const { repo, owner } = context.repo;
          const tag_name = 'nightly';
          const releases = await github.rest.repos.listReleases({
            owner,
            repo
          });
          const release = releases.data.find(release => release.tag_name === tag_name);
          if (release) {
            console.log('Release found');
            return { upload_url: release.upload_url };
          } else {
            throw new Error('No release found for the tag: ' + tag_name);
          }
        result-encoding: json

    - name: Upload Release Asset
      if: steps.find_existing_release.outputs.upload_url
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        upload_url: ${{ steps.find_existing_release.outputs.upload_url }}
        asset_path: ${{github.workspace}}/build/build.zip
        asset_name: build.zip
        asset_content_type: application/zip
